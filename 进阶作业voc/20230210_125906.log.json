{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Jan 17 2023, 23:13:24) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr\nNVCC: Cuda compilation tools, release 10.1, V10.1.24\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.3\nMMDetection: 2.28.1+", "config": "checkpoint_config = dict(interval=10)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'yolov3_d53_mstrain-608_273e_coco_20210518_115020-a2c3acb8.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=64)\nmodel = dict(\n    type='YOLOV3',\n    backbone=dict(\n        type='Darknet',\n        depth=53,\n        out_indices=(3, 4, 5),\n        init_cfg=dict(type='Pretrained', checkpoint='open-mmlab://darknet53')),\n    neck=dict(\n        type='YOLOV3Neck',\n        num_scales=3,\n        in_channels=[1024, 512, 256],\n        out_channels=[512, 256, 128]),\n    bbox_head=dict(\n        type='YOLOV3Head',\n        num_classes=20,\n        in_channels=[512, 256, 128],\n        out_channels=[1024, 512, 256],\n        anchor_generator=dict(\n            type='YOLOAnchorGenerator',\n            base_sizes=[[(116, 90), (156, 198), (373, 326)],\n                        [(30, 61), (62, 45), (59, 119)],\n                        [(10, 13), (16, 30), (33, 23)]],\n            strides=[32, 16, 8]),\n        bbox_coder=dict(type='YOLOBBoxCoder'),\n        featmap_strides=[32, 16, 8],\n        loss_cls=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            loss_weight=1.0,\n            reduction='sum'),\n        loss_conf=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            loss_weight=1.0,\n            reduction='sum'),\n        loss_xy=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            loss_weight=2.0,\n            reduction='sum'),\n        loss_wh=dict(type='MSELoss', loss_weight=2.0, reduction='sum')),\n    train_cfg=dict(\n        assigner=dict(\n            type='GridAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0)),\n    test_cfg=dict(\n        nms_pre=1000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        conf_thr=0.005,\n        nms=dict(type='nms', iou_threshold=0.45),\n        max_per_img=100))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(mean=[0, 0, 0], std=[255.0, 255.0, 255.0], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile', to_float32=True),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Expand', mean=[0, 0, 0], to_rgb=True, ratio_range=(1, 2)),\n    dict(\n        type='MinIoURandomCrop',\n        min_ious=(0.4, 0.5, 0.6, 0.7, 0.8, 0.9),\n        min_crop_size=0.3),\n    dict(type='Resize', img_scale=[(320, 320), (608, 608)], keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[0, 0, 0],\n        std=[255.0, 255.0, 255.0],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(608, 608),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[0, 0, 0],\n                std=[255.0, 255.0, 255.0],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=4,\n    train=dict(\n        type='VOCDataset',\n        ann_file='data/VOCdevkit/VOC2007/ImageSets/Main/train.txt',\n        img_prefix='data/VOCdevkit/VOC2007',\n        pipeline=[\n            dict(type='LoadImageFromFile', to_float32=True),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Expand', mean=[0, 0, 0], to_rgb=True,\n                ratio_range=(1, 2)),\n            dict(\n                type='MinIoURandomCrop',\n                min_ious=(0.4, 0.5, 0.6, 0.7, 0.8, 0.9),\n                min_crop_size=0.3),\n            dict(\n                type='Resize',\n                img_scale=[(320, 320), (608, 608)],\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[0, 0, 0],\n                std=[255.0, 255.0, 255.0],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='VOCDataset',\n        ann_file='data/VOCdevkit/VOC2007/ImageSets/Main/val.txt',\n        img_prefix='data/VOCdevkit/VOC2007',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(608, 608),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[255.0, 255.0, 255.0],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file='data/VOCdevkit/VOC2007/ImageSets/Main/val.txt',\n        img_prefix='data/VOCdevkit/VOC2007',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(608, 608),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[255.0, 255.0, 255.0],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict(grad_clip=dict(max_norm=10, norm_type=2))\nlr_config = None\nrunner = dict(type='EpochBasedRunner', max_epochs=25)\nevaluation = dict(interval=1, metric=['mAP'])\nwork_dir = './work_dirs/yolovoc'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 1978926387, "exp_name": "yolovoc.py"}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04305, "loss_cls": 80.08435, "loss_conf": 169.3518, "loss_xy": 58.66076, "loss_wh": 6.97163, "loss": 315.06853, "grad_norm": 703.40008, "time": 0.46349}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01892, "loss_cls": 57.85023, "loss_conf": 62.93901, "loss_xy": 54.16158, "loss_wh": 3.55942, "loss": 178.51025, "grad_norm": 740.55903, "time": 0.44005}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01681, "loss_cls": 51.58095, "loss_conf": 57.35602, "loss_xy": 53.21224, "loss_wh": 3.2888, "loss": 165.43801, "grad_norm": 773.04326, "time": 0.42349}
{"mode": "val", "epoch": 1, "iter": 2510, "lr": 0.001, "mAP": 0.4838, "AP50": 0.484}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04259, "loss_cls": 44.78241, "loss_conf": 52.79407, "loss_xy": 54.20986, "loss_wh": 3.15978, "loss": 154.94613, "grad_norm": 798.41864, "time": 0.44266}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01608, "loss_cls": 34.7929, "loss_conf": 46.44548, "loss_xy": 49.47743, "loss_wh": 3.57358, "loss": 134.28939, "grad_norm": 813.89168, "time": 0.42849}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01658, "loss_cls": 33.21172, "loss_conf": 45.87461, "loss_xy": 50.63841, "loss_wh": 3.48493, "loss": 133.20967, "grad_norm": 804.80139, "time": 0.43194}
{"mode": "val", "epoch": 2, "iter": 2510, "lr": 0.001, "mAP": 0.60604, "AP50": 0.606}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04354, "loss_cls": 30.39037, "loss_conf": 48.2822, "loss_xy": 53.5185, "loss_wh": 3.61034, "loss": 135.80141, "grad_norm": 844.80007, "time": 0.44988}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01641, "loss_cls": 25.50439, "loss_conf": 41.75753, "loss_xy": 50.4788, "loss_wh": 3.31085, "loss": 121.05157, "grad_norm": 808.46371, "time": 0.42424}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01591, "loss_cls": 25.57904, "loss_conf": 42.80244, "loss_xy": 49.2628, "loss_wh": 3.16392, "loss": 120.80821, "grad_norm": 832.10657, "time": 0.42645}
{"mode": "val", "epoch": 3, "iter": 2510, "lr": 0.001, "mAP": 0.70565, "AP50": 0.706}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.044, "loss_cls": 21.78436, "loss_conf": 40.03694, "loss_xy": 49.2812, "loss_wh": 3.73068, "loss": 114.8332, "grad_norm": 804.58523, "time": 0.45627}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01622, "loss_cls": 21.23679, "loss_conf": 41.20232, "loss_xy": 51.17892, "loss_wh": 4.17419, "loss": 117.79221, "grad_norm": 838.76149, "time": 0.42936}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.02048, "loss_cls": 18.71372, "loss_conf": 39.60402, "loss_xy": 48.26101, "loss_wh": 2.7391, "loss": 109.31785, "grad_norm": 821.19054, "time": 0.44706}
{"mode": "val", "epoch": 4, "iter": 2510, "lr": 0.001, "mAP": 0.73178, "AP50": 0.732}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04459, "loss_cls": 15.84465, "loss_conf": 36.55818, "loss_xy": 47.59146, "loss_wh": 3.03214, "loss": 103.02643, "grad_norm": 790.54881, "time": 0.45761}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.0171, "loss_cls": 19.80501, "loss_conf": 40.75489, "loss_xy": 51.33169, "loss_wh": 3.44218, "loss": 115.33378, "grad_norm": 876.95577, "time": 0.42828}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.0175, "loss_cls": 16.26023, "loss_conf": 38.54875, "loss_xy": 50.16173, "loss_wh": 3.0306, "loss": 108.0013, "grad_norm": 812.30744, "time": 0.42667}
{"mode": "val", "epoch": 5, "iter": 2510, "lr": 0.001, "mAP": 0.74129, "AP50": 0.741}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.05518, "loss_cls": 13.41876, "loss_conf": 33.32843, "loss_xy": 46.42302, "loss_wh": 2.94071, "loss": 96.11092, "grad_norm": 767.9151, "time": 0.46458}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01547, "loss_cls": 15.61593, "loss_conf": 37.86221, "loss_xy": 48.74113, "loss_wh": 2.65095, "loss": 104.87022, "grad_norm": 810.05021, "time": 0.42322}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01433, "loss_cls": 13.3884, "loss_conf": 37.2883, "loss_xy": 50.25558, "loss_wh": 2.79673, "loss": 103.72901, "grad_norm": 816.61513, "time": 0.43161}
{"mode": "val", "epoch": 6, "iter": 2510, "lr": 0.001, "mAP": 0.75071, "AP50": 0.751}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04488, "loss_cls": 12.3121, "loss_conf": 32.26904, "loss_xy": 46.34336, "loss_wh": 2.89729, "loss": 93.82178, "grad_norm": 768.06072, "time": 0.45599}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01647, "loss_cls": 13.61789, "loss_conf": 35.96385, "loss_xy": 50.05384, "loss_wh": 2.42433, "loss": 102.05991, "grad_norm": 832.79838, "time": 0.42973}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01659, "loss_cls": 12.37974, "loss_conf": 33.47996, "loss_xy": 47.59489, "loss_wh": 3.62453, "loss": 97.07912, "grad_norm": 800.02325, "time": 0.43389}
{"mode": "val", "epoch": 7, "iter": 2510, "lr": 0.001, "mAP": 0.76764, "AP50": 0.768}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04374, "loss_cls": 11.6246, "loss_conf": 33.08414, "loss_xy": 49.83362, "loss_wh": 3.02316, "loss": 97.56552, "grad_norm": 802.47731, "time": 0.44868}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01677, "loss_cls": 11.64212, "loss_conf": 33.58194, "loss_xy": 47.84043, "loss_wh": 2.66171, "loss": 95.7262, "grad_norm": 809.29638, "time": 0.43595}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01552, "loss_cls": 10.86168, "loss_conf": 33.40151, "loss_xy": 47.2001, "loss_wh": 2.63153, "loss": 94.09481, "grad_norm": 796.90152, "time": 0.42813}
{"mode": "val", "epoch": 8, "iter": 2510, "lr": 0.001, "mAP": 0.73268, "AP50": 0.733}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04687, "loss_cls": 9.79946, "loss_conf": 31.15375, "loss_xy": 47.51817, "loss_wh": 2.97088, "loss": 91.44226, "grad_norm": 765.11247, "time": 0.47646}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01699, "loss_cls": 9.73026, "loss_conf": 31.17516, "loss_xy": 47.34344, "loss_wh": 2.64629, "loss": 90.89515, "grad_norm": 758.00564, "time": 0.42755}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01708, "loss_cls": 10.83712, "loss_conf": 33.2633, "loss_xy": 48.81937, "loss_wh": 2.7042, "loss": 95.62399, "grad_norm": 838.30354, "time": 0.4311}
{"mode": "val", "epoch": 9, "iter": 2510, "lr": 0.001, "mAP": 0.76762, "AP50": 0.768}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04489, "loss_cls": 10.13566, "loss_conf": 30.77711, "loss_xy": 48.23986, "loss_wh": 2.62899, "loss": 91.78162, "grad_norm": 810.49056, "time": 0.45183}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.0146, "loss_cls": 9.74039, "loss_conf": 30.42419, "loss_xy": 47.67707, "loss_wh": 2.73217, "loss": 90.57382, "grad_norm": 749.46922, "time": 0.42695}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01661, "loss_cls": 9.55453, "loss_conf": 32.24843, "loss_xy": 50.92554, "loss_wh": 2.81149, "loss": 95.53998, "grad_norm": 786.28657, "time": 0.42561}
{"mode": "val", "epoch": 10, "iter": 2510, "lr": 0.001, "mAP": 0.74719, "AP50": 0.747}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.0432, "loss_cls": 9.46368, "loss_conf": 30.0767, "loss_xy": 48.34836, "loss_wh": 2.71082, "loss": 90.59956, "grad_norm": 798.39786, "time": 0.45179}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01677, "loss_cls": 9.06512, "loss_conf": 31.60383, "loss_xy": 51.36285, "loss_wh": 2.9443, "loss": 94.97611, "grad_norm": 841.03379, "time": 0.4307}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01617, "loss_cls": 8.66862, "loss_conf": 30.62537, "loss_xy": 47.3195, "loss_wh": 2.65483, "loss": 89.26833, "grad_norm": 801.24821, "time": 0.42713}
{"mode": "val", "epoch": 11, "iter": 2510, "lr": 0.001, "mAP": 0.7677, "AP50": 0.768}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04241, "loss_cls": 8.29619, "loss_conf": 28.70053, "loss_xy": 48.1628, "loss_wh": 2.29048, "loss": 87.45, "grad_norm": 781.82551, "time": 0.44974}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01872, "loss_cls": 8.60142, "loss_conf": 29.02533, "loss_xy": 49.33479, "loss_wh": 2.93876, "loss": 89.90029, "grad_norm": 774.93543, "time": 0.44362}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.0182, "loss_cls": 7.71468, "loss_conf": 28.11028, "loss_xy": 46.62901, "loss_wh": 2.47154, "loss": 84.92551, "grad_norm": 753.19824, "time": 0.43276}
{"mode": "val", "epoch": 12, "iter": 2510, "lr": 0.001, "mAP": 0.68085, "AP50": 0.681}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04524, "loss_cls": 7.08586, "loss_conf": 29.48964, "loss_xy": 48.26725, "loss_wh": 2.41694, "loss": 87.2597, "grad_norm": 769.60407, "time": 0.45567}
{"mode": "train", "epoch": 13, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.0166, "loss_cls": 7.91411, "loss_conf": 27.18035, "loss_xy": 46.8375, "loss_wh": 2.58699, "loss": 84.51896, "grad_norm": 771.38987, "time": 0.43074}
{"mode": "train", "epoch": 13, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.0173, "loss_cls": 7.58584, "loss_conf": 28.96493, "loss_xy": 48.8746, "loss_wh": 2.23144, "loss": 87.65681, "grad_norm": 789.20895, "time": 0.42971}
{"mode": "val", "epoch": 13, "iter": 2510, "lr": 0.001, "mAP": 0.75958, "AP50": 0.76}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.0452, "loss_cls": 7.29814, "loss_conf": 28.25699, "loss_xy": 48.25122, "loss_wh": 2.57302, "loss": 86.37938, "grad_norm": 776.7935, "time": 0.45083}
{"mode": "train", "epoch": 14, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01643, "loss_cls": 6.85626, "loss_conf": 27.7193, "loss_xy": 49.47416, "loss_wh": 2.38592, "loss": 86.43564, "grad_norm": 779.28531, "time": 0.42761}
{"mode": "train", "epoch": 14, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01565, "loss_cls": 7.16932, "loss_conf": 26.54562, "loss_xy": 47.22561, "loss_wh": 2.2315, "loss": 83.17205, "grad_norm": 741.20055, "time": 0.42954}
{"mode": "val", "epoch": 14, "iter": 2510, "lr": 0.001, "mAP": 0.77171, "AP50": 0.772}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.0442, "loss_cls": 6.69042, "loss_conf": 28.08704, "loss_xy": 48.52098, "loss_wh": 2.28067, "loss": 85.57911, "grad_norm": 755.88336, "time": 0.45511}
{"mode": "train", "epoch": 15, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01606, "loss_cls": 6.87335, "loss_conf": 25.31681, "loss_xy": 44.58196, "loss_wh": 2.16625, "loss": 78.93837, "grad_norm": 768.62242, "time": 0.43199}
{"mode": "train", "epoch": 15, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01908, "loss_cls": 6.79272, "loss_conf": 26.31297, "loss_xy": 47.59337, "loss_wh": 2.27151, "loss": 82.97056, "grad_norm": 753.89575, "time": 0.45195}
{"mode": "val", "epoch": 15, "iter": 2510, "lr": 0.001, "mAP": 0.74311, "AP50": 0.743}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.0438, "loss_cls": 6.63793, "loss_conf": 24.51786, "loss_xy": 45.56101, "loss_wh": 2.52548, "loss": 79.24229, "grad_norm": 763.35388, "time": 0.45683}
{"mode": "train", "epoch": 16, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01725, "loss_cls": 6.26183, "loss_conf": 27.27837, "loss_xy": 46.25595, "loss_wh": 2.19393, "loss": 81.99009, "grad_norm": 738.09691, "time": 0.43411}
{"mode": "train", "epoch": 16, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01609, "loss_cls": 7.62092, "loss_conf": 28.92311, "loss_xy": 51.32975, "loss_wh": 2.84471, "loss": 90.71849, "grad_norm": 834.71661, "time": 0.42892}
{"mode": "val", "epoch": 16, "iter": 2510, "lr": 0.001, "mAP": 0.7641, "AP50": 0.764}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04584, "loss_cls": 6.2015, "loss_conf": 26.17054, "loss_xy": 45.51714, "loss_wh": 2.16688, "loss": 80.05605, "grad_norm": 744.18634, "time": 0.47273}
{"mode": "train", "epoch": 17, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01531, "loss_cls": 6.3002, "loss_conf": 26.94047, "loss_xy": 46.83343, "loss_wh": 2.09389, "loss": 82.16799, "grad_norm": 786.92334, "time": 0.43559}
{"mode": "train", "epoch": 17, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.0152, "loss_cls": 7.60046, "loss_conf": 25.90759, "loss_xy": 50.56639, "loss_wh": 2.56419, "loss": 86.63862, "grad_norm": 763.59636, "time": 0.42489}
{"mode": "val", "epoch": 17, "iter": 2510, "lr": 0.001, "mAP": 0.77496, "AP50": 0.775}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04385, "loss_cls": 6.71198, "loss_conf": 27.21549, "loss_xy": 46.72027, "loss_wh": 2.22691, "loss": 82.87465, "grad_norm": 773.23974, "time": 0.4653}
{"mode": "train", "epoch": 18, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01451, "loss_cls": 5.89573, "loss_conf": 24.58503, "loss_xy": 45.21478, "loss_wh": 2.23807, "loss": 77.93361, "grad_norm": 718.88888, "time": 0.43247}
{"mode": "train", "epoch": 18, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01586, "loss_cls": 6.49389, "loss_conf": 27.22886, "loss_xy": 49.70553, "loss_wh": 2.33522, "loss": 85.7635, "grad_norm": 756.10859, "time": 0.43154}
{"mode": "val", "epoch": 18, "iter": 2510, "lr": 0.001, "mAP": 0.75647, "AP50": 0.756}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.0455, "loss_cls": 6.50964, "loss_conf": 26.90894, "loss_xy": 48.21015, "loss_wh": 2.31632, "loss": 83.94506, "grad_norm": 767.26132, "time": 0.45653}
{"mode": "train", "epoch": 19, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01534, "loss_cls": 5.13739, "loss_conf": 24.28128, "loss_xy": 45.42768, "loss_wh": 2.19289, "loss": 77.03925, "grad_norm": 713.59731, "time": 0.43795}
{"mode": "train", "epoch": 19, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01558, "loss_cls": 6.47055, "loss_conf": 24.73972, "loss_xy": 47.51783, "loss_wh": 2.29847, "loss": 81.02657, "grad_norm": 778.64999, "time": 0.43203}
{"mode": "val", "epoch": 19, "iter": 2510, "lr": 0.001, "mAP": 0.77755, "AP50": 0.778}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04457, "loss_cls": 5.82018, "loss_conf": 23.32831, "loss_xy": 46.22258, "loss_wh": 2.02511, "loss": 77.39618, "grad_norm": 732.60636, "time": 0.45239}
{"mode": "train", "epoch": 20, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01891, "loss_cls": 6.00402, "loss_conf": 23.92809, "loss_xy": 46.11219, "loss_wh": 2.42898, "loss": 78.47328, "grad_norm": 749.92255, "time": 0.46096}
{"mode": "train", "epoch": 20, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01698, "loss_cls": 5.99035, "loss_conf": 24.33041, "loss_xy": 46.31505, "loss_wh": 1.84815, "loss": 78.48396, "grad_norm": 773.96201, "time": 0.42332}
{"mode": "val", "epoch": 20, "iter": 2510, "lr": 0.001, "mAP": 0.77546, "AP50": 0.775}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04493, "loss_cls": 4.99528, "loss_conf": 24.96308, "loss_xy": 45.10388, "loss_wh": 2.08023, "loss": 77.14247, "grad_norm": 740.16429, "time": 0.45816}
{"mode": "train", "epoch": 21, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01649, "loss_cls": 4.94644, "loss_conf": 25.18162, "loss_xy": 48.5678, "loss_wh": 2.28227, "loss": 80.97813, "grad_norm": 722.65826, "time": 0.43397}
{"mode": "train", "epoch": 21, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01565, "loss_cls": 4.65925, "loss_conf": 22.69072, "loss_xy": 45.86863, "loss_wh": 2.04562, "loss": 75.26422, "grad_norm": 709.31665, "time": 0.43438}
{"mode": "val", "epoch": 21, "iter": 2510, "lr": 0.001, "mAP": 0.76043, "AP50": 0.76}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04493, "loss_cls": 5.55481, "loss_conf": 21.23824, "loss_xy": 46.00749, "loss_wh": 1.96866, "loss": 74.76919, "grad_norm": 730.30081, "time": 0.45744}
{"mode": "train", "epoch": 22, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01435, "loss_cls": 5.28272, "loss_conf": 25.71886, "loss_xy": 48.05641, "loss_wh": 2.00883, "loss": 81.06682, "grad_norm": 758.08322, "time": 0.4351}
{"mode": "train", "epoch": 22, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01656, "loss_cls": 5.89953, "loss_conf": 24.84678, "loss_xy": 47.83611, "loss_wh": 2.40903, "loss": 80.99145, "grad_norm": 747.81395, "time": 0.43716}
{"mode": "val", "epoch": 22, "iter": 2510, "lr": 0.001, "mAP": 0.75883, "AP50": 0.759}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04577, "loss_cls": 5.21743, "loss_conf": 24.12555, "loss_xy": 47.97624, "loss_wh": 2.06483, "loss": 79.38406, "grad_norm": 711.81422, "time": 0.458}
{"mode": "train", "epoch": 23, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01619, "loss_cls": 5.29318, "loss_conf": 23.64965, "loss_xy": 45.54641, "loss_wh": 2.06319, "loss": 76.55243, "grad_norm": 731.59412, "time": 0.44098}
{"mode": "train", "epoch": 23, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01963, "loss_cls": 5.54846, "loss_conf": 24.87597, "loss_xy": 46.63359, "loss_wh": 1.89955, "loss": 78.95757, "grad_norm": 761.76652, "time": 0.45259}
{"mode": "val", "epoch": 23, "iter": 2510, "lr": 0.001, "mAP": 0.77886, "AP50": 0.779}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.04559, "loss_cls": 5.00944, "loss_conf": 21.53041, "loss_xy": 43.83915, "loss_wh": 1.94417, "loss": 72.32317, "grad_norm": 727.15403, "time": 0.45527}
{"mode": "train", "epoch": 24, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01659, "loss_cls": 6.15573, "loss_conf": 26.82495, "loss_xy": 51.09756, "loss_wh": 2.16573, "loss": 86.24397, "grad_norm": 763.58629, "time": 0.43227}
{"mode": "train", "epoch": 24, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01627, "loss_cls": 3.96719, "loss_conf": 22.597, "loss_xy": 46.12735, "loss_wh": 1.94997, "loss": 74.64151, "grad_norm": 683.33385, "time": 0.43888}
{"mode": "val", "epoch": 24, "iter": 2510, "lr": 0.001, "mAP": 0.75724, "AP50": 0.757}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 0.001, "memory": 6941, "data_time": 0.05696, "loss_cls": 5.57562, "loss_conf": 24.19142, "loss_xy": 47.95045, "loss_wh": 1.94039, "loss": 79.65789, "grad_norm": 709.52838, "time": 0.4739}
{"mode": "train", "epoch": 25, "iter": 200, "lr": 0.001, "memory": 6941, "data_time": 0.01535, "loss_cls": 4.98446, "loss_conf": 23.86861, "loss_xy": 45.96152, "loss_wh": 2.1617, "loss": 76.97628, "grad_norm": 732.65966, "time": 0.43191}
{"mode": "train", "epoch": 25, "iter": 300, "lr": 0.001, "memory": 6941, "data_time": 0.01613, "loss_cls": 4.99924, "loss_conf": 23.21992, "loss_xy": 46.86168, "loss_wh": 2.04801, "loss": 77.12885, "grad_norm": 724.21408, "time": 0.42967}
{"mode": "val", "epoch": 25, "iter": 2510, "lr": 0.001, "mAP": 0.74805, "AP50": 0.748}
